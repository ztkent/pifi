<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>PiFi Dashboard</title>
    <style>
        * {
            box-sizing: border-box;
        }
        body {
            margin: 0;
            padding: 0;
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            line-height: 1.4;
        }
        .bg {
            background-color: rgb(161, 160, 160);
            min-height: 100vh;
            padding: 10px;
        }
        .container {
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 20px;
            width: 100%;
        }
        .status-row {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 30px;
            margin: 20px auto;
            max-width: 1400px;
            width: 100%;
        }
        .status-row.three-col {
            grid-template-columns: 1fr 1fr 1fr;
        }
        
        /* Large screen optimizations */
        @media (min-width: 1200px) {
            .status-row {
                gap: 40px;
                max-width: 1600px;
            }
            .container {
                padding: 30px;
            }
            .bg {
                padding: 15px;
            }
        }
        
        @media (min-width: 1400px) {
            .status-row {
                gap: 50px;
                max-width: 1800px;
            }
            .container {
                padding: 40px;
            }
        }
        
        /* Mobile responsive breakpoints */
        @media (max-width: 768px) {
            .bg {
                padding: 5px;
            }
            .status-row {
                grid-template-columns: 1fr;
                gap: 15px;
                margin: 10px;
            }
            .status-row.three-col {
                grid-template-columns: 1fr;
            }
            .container {
                padding: 10px;
            }
        }
        
        @media (max-width: 480px) {
            .bg {
                padding: 5px;
            }
            .container {
                padding: 5px;
            }
            .status-row {
                margin: 5px;
                gap: 10px;
            }
        }
        
        .nav-tabs {
            display: flex;
            justify-content: center;
            margin: 20px 0;
            gap: 10px;
            flex-wrap: wrap;
        }
        .nav-tab {
            padding: 12px 24px;
            background-color: #95a5a6;
            color: white;
            border: none;
            border-radius: 8px;
            cursor: pointer;
            font-size: 14px;
            font-weight: 500;
            transition: all 0.3s ease;
            min-width: 120px;
        }
        .nav-tab.active {
            background-color: #3498db;
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(52, 152, 219, 0.3);
        }
        .nav-tab:hover {
            background-color: #7f8c8d;
            transform: translateY(-1px);
        }
        .nav-tab.active:hover {
            background-color: #2980b9;
        }
        
        /* Mobile nav tabs */
        @media (max-width: 480px) {
            .nav-tabs {
                margin: 10px 0;
                gap: 8px;
            }
            .nav-tab {
                padding: 10px 16px;
                font-size: 13px;
                min-width: 100px;
                flex: 1;
            }
        }
        
        .tab-content {
            display: none;
        }
        .tab-content.active {
            display: block;
        }
        
        /* Enhanced popup styles */
        .error-popup {
            display: none;
            position: fixed;
            top: 20px;
            right: 20px;
            background: #ff4757;
            color: white;
            padding: 15px 20px;
            border-radius: 8px;
            box-shadow: 0 4px 20px rgba(0,0,0,0.15);
            z-index: 1000;
            max-width: 300px;
            font-size: 14px;
        }
        
        .error-popup.show {
            display: block;
            animation: slideIn 0.3s ease-out;
        }
        
        .close-btn {
            float: right;
            cursor: pointer;
            margin-left: 15px;
            font-size: 18px;
            line-height: 1;
            opacity: 0.8;
        }
        .close-btn:hover {
            opacity: 1;
        }
        
        .success-popup {
            background: #2ecc71;
        }
        .error-popup {
            background: #ff4757;
        }
        
        .popup {
            display: none;
            position: fixed;
            top: 20px;
            right: 20px;
            color: white;
            padding: 15px 20px;
            border-radius: 8px;
            box-shadow: 0 4px 20px rgba(0,0,0,0.15);
            z-index: 1000;
            max-width: 300px;
            font-size: 14px;
        }
        .popup.show {
            display: block;
            animation: slideIn 0.3s ease-out;
        }
        
        /* Mobile popup adjustments */
        @media (max-width: 480px) {
            .error-popup, .popup {
                top: 10px;
                right: 10px;
                left: 10px;
                right: 10px;
                max-width: none;
                font-size: 13px;
                padding: 12px 16px;
            }
        }
        
        /* Warning triangle icon */
        .warning-icon {
            display: inline-block;
            margin-left: 8px;
            color: #f39c12;
            cursor: pointer;
            font-size: 16px;
            vertical-align: middle;
            padding: 4px;
            border-radius: 4px;
            transition: all 0.2s ease;
        }
        .warning-icon:hover {
            color: #e67e22;
            background-color: rgba(243, 156, 18, 0.1);
        }
        
        /* Modal styles */
        .modal-overlay {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.5);
            z-index: 2000;
        }
        .modal-overlay.show {
            display: block;
        }
        .modal {
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            background: white;
            padding: 30px;
            border-radius: 8px;
            box-shadow: 0 4px 20px rgba(0,0,0,0.3);
            max-width: 500px;
            width: 90%;
            z-index: 2001;
        }
        .modal h3 {
            margin: 0 0 20px 0;
            color: #f39c12;
            font-size: 20px;
        }
        .modal p {
            margin: 0 0 15px 0;
            line-height: 1.5;
        }
        .modal ul {
            margin: 10px 0;
            padding-left: 20px;
        }
        .modal li {
            margin: 5px 0;
        }
        .modal .info-box {
            background: #f8f9fa;
            padding: 15px;
            border-radius: 5px;
            margin: 15px 0;
            border-left: 4px solid #3498db;
        }
        .modal .next-steps {
            background: #e8f5e8;
            padding: 15px;
            border-radius: 5px;
            margin: 15px 0;
            border-left: 4px solid #2ecc71;
        }
        .modal .close-modal {
            background: #95a5a6;
            color: white;
            border: none;
            padding: 10px 20px;
            border-radius: 5px;
            cursor: pointer;
            float: right;
            margin-top: 20px;
        }
        .modal .close-modal:hover {
            background: #7f8c8d;
        }
        
        /* Loading spinner styles */
        .loading-spinner {
            display: flex;
            align-items: center;
            justify-content: center;
            min-height: 200px;
            flex-direction: column;
            color: #666;
        }
        
        .spinner {
            width: 40px;
            height: 40px;
            border: 4px solid #f3f3f3;
            border-top: 4px solid #3498db;
            border-radius: 50%;
            animation: spin 1s linear infinite;
            margin-bottom: 15px;
        }
        
        .loading-text {
            font-size: 14px;
            color: #666;
        }
        
        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }
        
        @keyframes slideIn {
            from { transform: translateX(100%); }
            to { transform: translateX(0); }
        }
        
        /* HTMX loading indicators */
        .htmx-indicator {
            display: none;
        }
        
        .htmx-request .htmx-indicator {
            display: flex;
        }
        
        .htmx-request.loading-spinner {
            opacity: 0.7;
        }
    </style>
    <script src="/static/htmx.js"></script>
</head>
<body class="bg">
    <div id="error-popup" class="error-popup">
        <span class="close-btn" onclick="this.parentElement.classList.remove('show')">×</span>
        <span id="error-message"></span>
    </div>
    <div id="message-popup" class="popup">
        <span class="close-btn" onclick="this.parentElement.classList.remove('show')">×</span>
        <span id="message-text"></span>
    </div>

    <!-- AP Mode Warning Modal -->
    <div id="ap-warning-modal" class="modal-overlay" onclick="closeApWarningModal(event)">
        <div class="modal">
            <h3>⚠️ Switching to Access Point Mode</h3>
            <p>You are about to switch this device to Access Point (AP) mode. This will:</p>
            <ul>
                <li>Disconnect from the current WiFi network</li>
                <li>Create a new WiFi access point</li>
                <li>Allow you to connect other devices to configure WiFi settings</li>
            </ul>
            
            <div class="info-box">
                <strong>Access Point Name:</strong> PiFi-AP-[Unique ID]<br>
                <strong>IP Address:</strong> 10.42.0.1<br>
                <strong>Web Interface:</strong> http://10.42.0.1:8088
            </div>
            
            <div class="next-steps">
                <strong>Next Steps:</strong>
                <ol>
                    <li>Connect your device (phone, laptop, etc.) to the PiFi-AP-[Unique ID] network</li>
                    <li>Open a web browser and navigate to http://10.42.0.1:8088</li>
                    <li>Configure your WiFi settings from there</li>
                </ol>
            </div>
            
            <button class="close-modal" onclick="closeApWarningModal()">Got it</button>
            <div style="clear: both;"></div>
        </div>
    </div>

    <div class="nav-tabs">
        <button class="nav-tab active" onclick="switchTab('network-status')">Network Status</button>
        <button class="nav-tab" onclick="switchTab('environment')">Environment</button>
    </div>

    <div id="network-status" class="tab-content active">
        <div class="status-row">
            <div class="container"
                 hx-get="/status"
                 hx-trigger="load, every 30s"
                 hx-swap="innerHTML"
                 hx-indicator=".status-spinner">
                <div class="loading-spinner status-spinner">
                    <div class="spinner"></div>
                    <div class="loading-text">Loading status...</div>
                </div>
            </div>
            <div class="container"
                 hx-get="/network"
                 hx-trigger="load, networkupdate"
                 hx-swap="innerHTML"
                 hx-indicator=".network-spinner">
                <div class="loading-spinner network-spinner">
                    <div class="spinner"></div>
                    <div class="loading-text">Loading networks...</div>
                </div>
            </div>
        </div>
    </div>

    <div id="environment" class="tab-content">
        <div class="container"
             hx-get="/environment"
             hx-trigger="load, envupdate"
             hx-swap="innerHTML"
             hx-indicator=".env-spinner">
            <div class="loading-spinner env-spinner">
                <div class="spinner"></div>
                <div class="loading-text">Loading environment...</div>
            </div>
        </div>
    </div>

    <script>
        let valuesVisible = false;
        let editingKey = null;
        let originalValue = null;
        
        function switchTab(tabName) {
            // Hide all tab contents
            document.querySelectorAll('.tab-content').forEach(tab => {
                tab.classList.remove('active');
            });
            
            // Remove active class from all nav tabs
            document.querySelectorAll('.nav-tab').forEach(tab => {
                tab.classList.remove('active');
            });
            
            // Show selected tab content
            document.getElementById(tabName).classList.add('active');
            
            // Add active class to clicked nav tab
            event.target.classList.add('active');
        }

        function showApWarning() {
            document.getElementById('ap-warning-modal').classList.add('show');
        }

        function closeApWarningModal(event) {
            // Only close if clicking the overlay, not the modal content
            if (!event || event.target.classList.contains('modal-overlay')) {
                document.getElementById('ap-warning-modal').classList.remove('show');
            }
        }

        // Add the warning icon next to AP mode dropdowns
        document.body.addEventListener('htmx:afterSwap', function(evt) {
            // Look specifically for the Network Mode select element
            const selects = evt.detail.target.querySelectorAll('select[name="mode"]');
            selects.forEach(select => {
                // Only add warning icon if this is the mode select and doesn't already have one
                if (!select.nextElementSibling?.classList.contains('warning-icon')) {
                    const warningIcon = document.createElement('span');
                    warningIcon.className = 'warning-icon';
                    warningIcon.innerHTML = '⚠️';
                    warningIcon.title = 'Click for important information about AP mode';
                    warningIcon.onclick = showApWarning;
                    select.parentNode.insertBefore(warningIcon, select.nextSibling);
                }
            });
        });

        document.body.addEventListener('htmx:responseError', function(evt) {
            if (evt.detail.pathInfo.requestPath !== '/env/set') {
                const popup = document.getElementById('error-popup');
                const message = document.getElementById('error-message');
                message.textContent = evt.detail.error || 'An error occurred';
                popup.classList.add('show');
                setTimeout(() => popup.classList.remove('show'), 5000);
            }
        });

        document.body.addEventListener('htmx:afterRequest', function(evt) {
            const popup = document.getElementById('message-popup');
            const message = document.getElementById('message-text');
            
            if (evt.detail.pathInfo.requestPath === '/add-network') {
                if (evt.detail.successful) {
                    showSuccessMessage('Network configuration saved');
                    htmx.trigger('.container[hx-get="/network"]', 'networkupdate');
                } 
            } else if (evt.detail.pathInfo.requestPath === '/remove-network') {
                if (evt.detail.successful) {
                    showSuccessMessage('Network deleted');
                    htmx.trigger('.container[hx-get="/network"]', 'networkupdate');
                } 
            } else if (evt.detail.pathInfo.requestPath === '/connect') {
                if (evt.detail.successful) {
                    showSuccessMessage('Network connected');
                    htmx.trigger('.container[hx-get="/network"]', 'networkupdate');
                } 
            } else if (evt.detail.pathInfo.requestPath === '/autoconnect-network') {
                if (evt.detail.successful) {
                    showSuccessMessage('Network autoconnection updated');
                    htmx.trigger('.container[hx-get="/network"]', 'networkupdate');
                } 
            } else if (evt.detail.pathInfo.requestPath === '/setmode') {
                if (evt.detail.successful) {
                    showSuccessMessage('Network mode updated');
                } 
            } else if (evt.detail.pathInfo.requestPath === '/env/set') {
                if (evt.detail.successful) {
                    htmx.trigger('.container[hx-get="/environment"]', 'envupdate');
                    // Clear the form
                    document.querySelector('input[name="key"]').value = '';
                    document.querySelector('input[name="value"]').value = '';
                } 
            } else if (evt.detail.pathInfo.requestPath === '/env/unset') {
                if (evt.detail.successful) {
                    showSuccessMessage('Environment variable deleted');
                    htmx.trigger('.container[hx-get="/environment"]', 'envupdate');
                } 
            }
        });

        function showSuccessMessage(text) {
            const popup = document.getElementById('message-popup');
            const message = document.getElementById('message-text');
            popup.classList.add('success-popup');
            message.textContent = text;
            popup.classList.add('show');
            setTimeout(() => {
                popup.classList.remove('show');
                popup.classList.remove('success-popup', 'error-popup');
            }, 5000);
        }
    </script>
</body>
</html>